<source>
  @type tail
  path /var/lib/docker/containers/*/*-json.log
  pos_file fluentd-docker.pos
  time_format %Y-%m-%dT%H:%M:%S
  tag docker.*
  format json
  read_from_head true
</source>

<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata_elastic
</filter>

    # This adds type to the log && change key log to message
<filter **>
  @type record_modifier
  <record>
    message ${record["log"]}
  </record>
  remove_keys log
</filter>

<filter **>
  @type grep
  <regexp>
    key $.docker.name
    pattern "/#{ENV['LOGZIO_INCLUDE_REGEX']}/"
  </regexp>
</filter>


<match **>
  @type logzio_buffered
  endpoint_url "#{ENV['LOGZIO_LOG_LISTENER']}?token=#{ENV['LOGZIO_LOG_SHIPPING_TOKEN']}&type=#{ENV['LOGZIO_TYPE']}"
  proxy_uri "#{ENV['LOGZIO_PROXY_URI']}"
  proxy_cert "#{ENV['LOGZIO_PROXY_CERT']}"
  output_include_time true
  output_include_tags true
  http_idle_timeout 10
  <buffer>
    # Set the buffer type to file to improve the reliability and reduce the memory consumption
    @type "#{ENV['LOGZIO_BUFFER_TYPE']}"
    path "#{ENV['LOGZIO_BUFFER_PATH']}"
    # Set queue_full action to block because we want to pause gracefully
    # in case of the off-the-limits load instead of throwing an exception
    overflow_action "#{ENV['LOGZIO_OVERFLOW_ACTION']}"
    # Set the chunk limit conservatively to avoid exceeding the GCL limit
    # of 10MiB per write request.
    chunk_limit_size "#{ENV['LOGZIO_CHUNK_LIMIT_SIZE']}"
    # Cap the combined memory usage of this buffer and the one below to
    # 2MiB/chunk * (6 + 2) chunks = 16 MiB
    queue_limit_length "#{ENV['LOGZIO_QUEUE_LIMIT_LENGTH']}"
    # Never wait more than 5 seconds before flushing logs in the non-error case.
    flush_interval "#{ENV['LOGZIO_FLUSH_INTERVAL']}"
    # Never wait longer than 30 seconds between retries.
    retry_max_interval "#{ENV['LOGZIO_RETRY_MAX_INTERVAL']}"
    # Disable the limit on the number of retries (retry forever).
    retry_forever "#{ENV['LOGZIO_RETRY_FOREVER']}"
    # Use multiple threads for processing.
    flush_thread_count "#{ENV['LOGZIO_FLUSH_THREAD_COUNT']}"
  </buffer>
</match>

